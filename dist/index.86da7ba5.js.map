{"mappings":"AAGI,IAAI,gBAA+B;IACjC;QAAE,IAAI;QAAG,MAAM;IAAW;IAC1B;QAAE,IAAI;QAAG,MAAM;IAAS;IACxB;QAAE,IAAI;QAAG,MAAM;IAAS;CACzB;AAED,IAAG,CAAC,aAAa,QAAQ,kBACvB,aAAa,QAAQ,SAAS,KAAK,UAAU;AAG/C,IAAI,UAAU,SAAS,eAAe;AACtC,IAAI,SAAS,SAAS,eAAe;AACrC,IAAI,UAAU,SAAS,eAAe;AACtC,IAAI,SAAS;AAEb,MAAM,kBAAkB,CAAC,MAAc,IAAI;IACzC,OAAO,KAAK,MAAM,KAAK,WAAW;AACpC;AAEA,MAAM,eAAe,CAAC;IACpB,gBAAgB,cAAc,OAAO,CAAC;QACpC,IAAI,SAAS,OAAO,OAClB,OAAO;IAEX;IACA;AACF;AAEA,MAAM,aAAa,CAAC;IAClB,IAAI,gBAAyC,cAAc,KACzD,CAAC,SAAW,OAAO,OAAO;IAEhC,QAAQ,IAAI;IACR,IAAI,eACF;QAAA,IAAI,QAAQ;YACV,SAAS;YACT,OAAO,YAAY;YACnB,QAAQ,QAAQ,cAAc;QAChC;IAAA;IAEF;AACF;AAEA,MAAM,SAAS;IACb,IAAI,SAAS;QACX,IAAI,OAAO;QAEX,KAAI,IAAI,QAAQ,cACd,QAAQ,CAAC;0CACuB,EAAE,KAAK,GAAG;0CACV,EAAE,KAAK,KAAK;;8EAEwB,EAAE,KAAK,GAAG;oEACpB,EAAE,KAAK,GAAG;;0BAEpD,CAAC;QAEnB,QAAQ,YAAY;IACtB;AACF;AAEA,IAAI,QACF,OAAO,iBAAiB,SAAS;IAE7B,IAAI,QAAQ,UAAU,IAAI;QACxB,IAAI,WAAW,GACf,cAAc,KAAK;YAAE,IAAI;YAAmB,MAAM,QAAQ;QAAM;aAE/D;YACH,gBAAgB,cAAc,IAAI,CAAC;gBACjC,IAAI,OAAO,OAAO,QAChB,OAAO;oBACL,GAAG,MAAM;oBACT,IAAI;oBACJ,MAAM,QAAQ;gBAChB;qBACG,OAAO;YACd;YACA,SAAS;YACT,IAAI,QAAQ,OAAO,YAAY;QACjC;QACA,QAAQ,QAAQ;QAChB;IACJ,OAEI,QAAQ,UAAU,QAAQ,cAAc;AAE1C;AAKF,QAAQ,iBAAiB,SAAS;IAC9B,IAAI,QAAQ,UAAU,IACpB,QAAQ,UAAU,QAAQ,cAAc;SAExC,QAAQ,UAAU,QAAQ,kBAAkB;AAEhD;AAEF","sources":["src/script.ts"],"sourcesContent":["\r\n    type typeOfArray = { id: number; name: string };\r\n  \r\n    let arrayOfObject: typeOfArray[] = [\r\n      { id: 1, name: \"Roobinee\" },\r\n      { id: 2, name: \"Barath\" },\r\n      { id: 3, name: \"Dharun\" },\r\n    ];\r\n  \r\n    if(!localStorage.getItem(\"arrayOfObject\")){\r\n      localStorage.setItem(\"array\", JSON.stringify(arrayOfObject));\r\n    }\r\n  \r\n    let listRef = document.getElementById(\"list\");\r\n    let btnRef = document.getElementById(\"btn\");\r\n    let nameRef = document.getElementById(\"name\") as HTMLInputElement;\r\n    let editId = 0;\r\n  \r\n    const getRandomNumber = (max: number = 1000): number => {\r\n      return Math.floor(Math.random() * max);\r\n    };\r\n\r\n    const deleteObject = (delId:number) => {\r\n      arrayOfObject = arrayOfObject.filter((retainId) => {\r\n        if (retainId.id !== delId) {\r\n          return retainId;\r\n        }\r\n      });\r\n      render();\r\n    };\r\n  \r\n    const editObject = (EditId: number) => {\r\n      let clickedObject: typeOfArray | undefined = arrayOfObject.find(\r\n        (object) => object.id === EditId\r\n      );\r\n  console.log(clickedObject);\r\n      if (clickedObject) {\r\n        if (btnRef) {\r\n          editId = EditId;\r\n          btnRef.innerText = \"Edit\";\r\n          nameRef.value = clickedObject.name;\r\n        }\r\n      }\r\n      render();\r\n    };\r\n  \r\n    const render = () => {\r\n      if (listRef) {\r\n        let list = \"\";\r\n  \r\n        for(let item of arrayOfObject) {\r\n          list += `<div class=\"d-flex align-items-center justify-content-between p-2 border-bottom border-primary\">\r\n                      <p class=\"fs-5 m-0\">${item.id}</p>\r\n                      <p class=\"fs-5 m-0\">${item.name}</p>\r\n                      <div>\r\n                        <button type=\"button\" class=\"btn\" onclick=\"editObject(${item.id})\">Edit</button>\r\n                        <button type=\"button\" onclick=\"deleteObject(${item.id})\" class=\"btn text-danger\" >Delete</button>\r\n                      </div>\r\n                    </div>`;\r\n        }\r\n        listRef.innerHTML = list;\r\n      }\r\n    };\r\n  \r\n    if (btnRef) {\r\n      btnRef.addEventListener(\"click\", () => {\r\n        \r\n          if (nameRef.value !== \"\") {\r\n            if (editId === 0) {\r\n            arrayOfObject.push({ id: getRandomNumber(), name: nameRef.value });\r\n          }\r\n        else {\r\n          arrayOfObject = arrayOfObject.map((object) => {\r\n            if (object.id === editId)\r\n              return {\r\n                ...object,\r\n                id: editId,\r\n                name: nameRef.value,\r\n              };\r\n            else return object;\r\n          });\r\n          editId = 0;\r\n          if (btnRef) btnRef.innerText = \"Add\";\r\n        }\r\n        nameRef.value = \"\";\r\n        render();\r\n    } \r\n    else {\r\n        nameRef.classList.replace(\"is-invalid\", \"border-primary\");\r\n      }\r\n      });\r\n    \r\n    }\r\n  \r\n\r\n    nameRef.addEventListener(\"keyup\", () => {\r\n        if (nameRef.value !== \"\") {\r\n          nameRef.classList.replace(\"is-invalid\", \"border-primary\");\r\n        } else {\r\n          nameRef.classList.replace(\"border-primary\", \"is-invalid\");\r\n        }\r\n      });\r\n\r\n    render();\r\n\r\n  "],"names":[],"version":3,"file":"index.86da7ba5.js.map","sourceRoot":"/__parcel_source_root/"}